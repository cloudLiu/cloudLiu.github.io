<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cloudliu.github.io</id>
    <title>鸣昂网络</title>
    <updated>2019-08-12T01:29:52.320Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cloudliu.github.io"/>
    <link rel="self" href="https://cloudliu.github.io/atom.xml"/>
    <subtitle>公司内部项目经验汇总、学习资料共享！</subtitle>
    <logo>https://cloudliu.github.io/images/avatar.png</logo>
    <icon>https://cloudliu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 鸣昂网络</rights>
    <entry>
        <title type="html"><![CDATA[一些实用代码]]></title>
        <id>https://cloudliu.github.io/post/yi-xie-shi-yong-dai-ma</id>
        <link href="https://cloudliu.github.io/post/yi-xie-shi-yong-dai-ma">
        </link>
        <updated>2019-08-12T00:34:58.000Z</updated>
        <content type="html"><![CDATA[<h2 id="element的一个校验正则">element的一个校验正则</h2>
<ul>
<li>oninput =&quot;value=value.replace(/[^\d]/g,'')&quot;    //只能输入数字</li>
<li>oninput =&quot;value=value.replace(/[^0-9.]/g,'')&quot;  //只能输入数字和小数</li>
</ul>
<h2 id="如何不停止服务清空nohupout文件">如何不停止服务清空nohup.out文件</h2>
<pre><code>cp /dev/null nohup.out
cat /dev/null &gt; nohup.out
</code></pre>
<h2 id="spring事务">spring事务</h2>
<ul>
<li>TransactionAspectSupport.currentTransactionStatus().setRollbackOnly(); //spring手动设置回滚，必须抛出运行时异常spring才能监听到回滚，所以遇到try catch了的或者不是运行时异常就手动回滚下。</li>
</ul>
<h2 id="pfx证书转jks证书">pfx证书转jks证书</h2>
<pre><code>在命令行执行下面命令：
keytool -importkeystore -srckeystore  2618542_friend.biuwork.com.pfx -srcstoretype pkcs12 -destkeystore mycert.jks -deststoretype JKS
根据提示输入密码
</code></pre>
<h2 id="mysql查看设置隔离级别-阿里云默认是read-committed">MySQL查看设置隔离级别 - 阿里云默认是READ-COMMITTED</h2>
<pre><code>mysql默认的事务处理级别是'REPEATABLE-READ',也就是可重复读
1.查看当前会话隔离级别
select @@tx_isolation;
2.查看系统当前隔离级别
select @@global.tx_isolation;
3.设置当前会话隔离级别
set session transaction isolatin level repeatable read;
4.设置系统当前隔离级别
set global transaction isolation level repeatable read;
--------------------- 
版权声明：本文为CSDN博主「程序媛-kaka」的原创文章，遵循CC 4.0 by-sa版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/dyhdengyahui/article/details/80110545
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[鸣昂Java接口规范]]></title>
        <id>https://cloudliu.github.io/post/ming-ang-java-jie-kou-gui-fan</id>
        <link href="https://cloudliu.github.io/post/ming-ang-java-jie-kou-gui-fan">
        </link>
        <updated>2019-08-11T11:30:19.000Z</updated>
        <content type="html"><![CDATA[<h1 id="java开发规范">java开发规范</h1>
<blockquote>
<p>对接口安全和代码编写进行一定指导，算是一份自我检查测试的要求。</p>
</blockquote>
<h2 id="基本要求">基本要求</h2>
<h4 id="1提交数据校验类型-长度大小">1.提交数据校验：类型、长度大小</h4>
<h4 id="2接口锁机制特别是更新操作保证业务在任何情况都是正确的">2.接口锁机制，特别是更新操作，保证业务在任何情况都是正确的</h4>
<pre><code>并发修改同一记录时，避免更新丢失，需要加锁。要么在应用层加锁，要么在缓存加 锁，要么在数据库层使用乐观锁，使用 version 作为更新依据。 
说明：如果每次访问冲突概率小于 20%，推荐使用乐观锁，否则使用悲观锁。乐观锁的重试次 数不得小于 3 次。
</code></pre>
<h4 id="3基本限流">3.基本限流</h4>
<h4 id="4复杂业务-拆分-保证接口响应速度在50毫秒">4.复杂业务-拆分。保证接口响应速度在50毫秒</h4>
<h4 id="5重试机制">5.重试机制</h4>
<pre><code>拆分业务需要保证任务完成一致性要么全部完成要么全部失败，或者加入人工操作，最终一致性。
</code></pre>
<h4 id="6权限框架redission-shiro">6.权限框架：redission shiro</h4>
<h4 id="7日志框架日志要便于分析和上面的重试配合">7.日志框架，日志要便于分析，和上面的重试配合</h4>
<h4 id="8接口文档使用vue结构的文档样式">8.接口文档，使用Vue结构的文档样式</h4>
<h4 id="9dodtobovo">9.DO/DTO/BO/VO</h4>
<h4 id="10如果是-jdk8-的应用可以使用-instant-代替-datelocaldatetime-代替-calendar">10.如果是 JDK8 的应用，可以使用 Instant 代替 Date，LocalDateTime 代替 Calendar</h4>
<pre><code>DateTimeFormatter 代替 SimpleDateFormat，官方给出的解释：simple beautiful strong immutable thread-safe。
</code></pre>
<h4 id="11事务问题学习掌握事务相关知识">11.事务问题，学习掌握事务相关知识</h4>
<pre><code>* 隔离性
* 传播性
* spring事务的配置方法
* 数据库锁在事务中的体现
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://cloudliu.github.io/post/hello-gridea</id>
        <link href="https://cloudliu.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>